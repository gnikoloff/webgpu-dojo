[[block]]
struct Lighting {
  position: vec3<f32>;
};

[[group(1), binding(0)]]
var <uniform> lighting: Lighting;

[[block]]
struct Material {
  baseColor: vec3<f32>;
};

[[group(2), binding(0)]]
var <uniform> material: Material;

struct Input {
  [[location(0)]] normal: vec4<f32>;
};

[[stage(fragment)]]

fn main (input: Input) -> [[location(0)]] vec4<f32> {
  let lightDirection: vec3<f32> = normalize(lighting.position);
  
  let normal: vec3<f32> = normalize(input.normal.rgb);
  let light: f32 = dot(normal, lightDirection);
  
  let baseColor: vec3<f32> = vec3<f32>(0.1, 0.2, 0.8);

  return vec4<f32>(material.baseColor * light, 1.0);
}
